<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.instorage.myproject.boardMapper">
   <!-- 게시물 개수 카운트 반환 -->
   <select id="countAllBoard" resultType="int">
      SELECT count(*) FROM board;
   </select>
   <!-- bno로 게시물 탐색 후 객체 반환 -->
   <select id="selectBoardByBno" parameterType="int" resultType="BoardDto">
      select * from board where bno=#{bno};
   </select>
   <!-- 모든 게시물 list로 반환 -->
   <select id="selectAllBoard" resultType="BoardDto">
    select * from board  ORDER BY reg_date desc , bno desc;
   </select>
   <!-- 페에지에 담기는 객체들을 반환한다.-->
   <select id="selectPageByMap" resultType="BoardDto" parameterType="map">
      select * from board ORDER BY reg_date desc , bno desc limit #{offset},#{pageSize}
   </select>
   <!-- 모든 게시물 삭제하기.삭제된 행 개수 반환 -->
   <delete id="deleteAllBoard">
      delete from board;
   </delete>
   <!-- writer와 bno가 일치할시 게시물 삭제하기 -->
   <delete id="deleteBoardByBnoAndWriter" parameterType="map">
      delete
      from board
      where bno=#{bno} and writer=#{writer};
   </delete>
   <!-- 게시물 db 저장 -->
   <insert id="insertBoard" parameterType="BoardDto">
      insert into board (type,writer, title, content)
      values (#{type},#{writer},#{title},#{content});
   </insert>
   <!-- 게시물 업데이트.bno로 탐색 -->
   <update id="updateBoard" parameterType="BoardDto">
      update board set title=#{title},content=#{content} where bno=#{bno};
   </update>
   <update id="increaseViewCntByBno" parameterType="int">
      update board set view_cnt = view_cnt+1 where bno=#{bno};
   </update>
    <select id="selectSearchPage" parameterType="SearchCondition" resultType="BoardDto">
        <choose>
            <when test='option == "T"'>
                SELECT board.*, user_info.nickname
                FROM board
                INNER JOIN user_info ON board.writer = user_info.id
                WHERE board.type = #{type} AND board.title LIKE CONCAT('%',#{keyword},'%')
                ORDER BY board.reg_date DESC, board.bno DESC
                LIMIT #{offset}, #{pageSize};
            </when>
            <when test='option == "A"'>
                SELECT board.*, user_info.nickname
                FROM board
                INNER JOIN user_info ON board.writer = user_info.id
                WHERE board.type = #{type} AND (board.title LIKE CONCAT('%',#{keyword},'%') OR board.content LIKE CONCAT('%',#{keyword},'%'))
                ORDER BY board.reg_date DESC, board.bno DESC
                LIMIT #{offset}, #{pageSize};
            </when>
            <when test='option == "W"'>
                SELECT board.*, user_info.nickname
                FROM board
                INNER JOIN user_info ON board.writer = user_info.id
                WHERE board.type = #{type} AND user_info.nickname LIKE CONCAT('%',#{keyword},'%')
                ORDER BY board.reg_date DESC, board.bno DESC
                LIMIT #{offset}, #{pageSize};
            </when>
            <otherwise>
                SELECT board.*, user_info.nickname
                FROM board
                INNER JOIN user_info ON board.writer = user_info.id
                WHERE board.type = #{type}
                ORDER BY board.reg_date DESC, board.bno DESC
                LIMIT #{offset}, #{pageSize};
            </otherwise>
        </choose>
    </select>

    <select id="countSearchPage" resultType="int" parameterType="SearchCondition">
        <choose>
            <when test='option == "T"'>
                select count(*)
                from board
                inner join user_info on board.writer = user_info.id
                where board.type = #{type} and board.title like concat('%',#{keyword},'%');
            </when>
            <when test='option == "A"'>
                select count(*)
                from board
                inner join user_info on board.writer = user_info.id
                where board.type = #{type} and (board.title like concat('%',#{keyword},'%') or board.content like concat('%',#{keyword},'%'));
            </when>
            <when test='option == "W"'>
                select count(*)
                from board
                inner join user_info on board.writer = user_info.id
                where board.type = #{type} and user_info.nickname like concat('%',#{keyword},'%');
            </when>
            <otherwise>
                select count(*)
                from board
                inner join user_info on board.writer = user_info.id
                where board.type = #{type};
            </otherwise>
        </choose>
    </select>
    <update id="updateCommentCntByBnoAndNum" parameterType="map">
        update board set comment_cnt = comment_cnt + #{num} where bno=#{bno};
    </update>
    <select id="checkBoardByBno" resultType="boolean">
        SELECT EXISTS (SELECT 1 FROM board WHERE bno=#{bno});
    </select>


</mapper>
